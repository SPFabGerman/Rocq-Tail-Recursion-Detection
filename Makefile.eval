# Creates the raw output of checking a library.
.PRECIOUS: evaluation_out/Library_%_raw.txt
evaluation_out/Library_%_raw.txt : evaluation/%.v
	@echo "Compiling $< and generating $@"
	@mkdir -p $(subst _raw.txt,,$(subst Library_,,$@))
	@rocq compile -R theories TRchecker $^ | grep -v "^Module contains" > $@


# Extracts the recursive calls from the raw output for a library.
.PRECIOUS: evaluation_out/Library_%_reccalls.txt
evaluation_out/Library_%_reccalls.txt : evaluation_out/Library_%_raw.txt
	@echo "Filtering recursive calls into $@"
	@cat $< | grep -v "^Unsupported" | sort | uniq > $@


# Extracts the tail recursive calls from the recursive calls output for a library.
.PRECIOUS: evaluation_out/Library_%_tailreccalls.txt
evaluation_out/Library_%_tailreccalls.txt : evaluation_out/Library_%_reccalls.txt
	@echo "Filtering tail recursive calls into $@"
	@cat $< | grep "^Tail-Recursive" > $@


# Extracts the recursive functions from the recursive calls output for a library.
.PRECIOUS: evaluation_out/Library_%_recfuncs.txt
evaluation_out/Library_%_recfuncs.txt : evaluation_out/Library_%_reccalls.txt
	@echo "Filtering recursive functions into $@"
	@cat $< | sed 's/^.*(\(.*\)):.*$$/\1/' | sort | uniq > $@


# Extracts the non-tail recursive functions from the recursive calls output for a library.
.PRECIOUS: evaluation_out/Library_%_ntrecfuncs.txt
evaluation_out/Library_%_ntrecfuncs.txt : evaluation_out/Library_%_reccalls.txt
	@echo "Filtering non-tail recursive functions into $@"
	@cat $< | grep "^Non-Tail-Recursive Call" | sed 's/^.*(\(.*\)):.*$$/\1/' | sort | uniq > $@


# Extracts the Type/Set non-tail recursive functions from the non-tail recursive function info for a library.
.PRECIOUS: evaluation_out/Library_%_ntrecfuncs_noprops.txt
evaluation_out/Library_%_ntrecfuncs_noprops.txt : evaluation_out/Library_%_ntrecfuncs.txt
	@echo "Filtering non-propositional non-tail recursive functions into $@"
	@cat $< | sed -f filter_prop.sed | grep -v '^$$' | sort | uniq > $@


# Runs the compilation based evaluation and generates the non-tail recursive calls found in the binary of the library.
.PRECIOUS: evaluation_out/Library_%_compilation.txt
evaluation_out/Library_%_compilation.txt : evaluation_out/Library_%_ntrecfuncs_noprops.txt
	@echo "Running compiler based tests and pushing agreement into $@"
	@bash ./evaluation.sh $(subst _compilation.txt,,$(subst evaluation_out/Library_,,$@))


# Extracts the fully qualified function names from the compilation based evaluation.
.PRECIOUS: evaluation_out/Library_%_compilation_mods.txt
evaluation_out/Library_%_compilation_mods.txt : evaluation_out/Library_%_compilation.txt
	@cat $< | cut -d' ' -f 1 > $@


# Generates a list of functions for which our algorithm agrees with the compilation based output.
# Also, generates on the fly the disageements, i.e. the functions which exist only in the output
# of our algorithm or in the compilation based output.
.PRECIOUS: evaluation_out/Library_%_agreement.txt
evaluation_out/Library_%_agreement.txt : evaluation_out/Library_%_compilation_mods.txt evaluation_out/Library_%_ntrecfuncs_noprops.txt
	@comm -2 -3 $(subst _agreement,_ntrecfuncs_noprops,$@) $< > $(subst _agreement,_removed,$@)
	@comm -1 -3 $(subst _agreement,_ntrecfuncs_noprops,$@) $< > $(subst _agreement,_added,$@)
	@comm -1 -2 $(subst _agreement,_ntrecfuncs_noprops,$@) $< > $@

# Generates a summary for the library being analyzed.
evaluation_out/Library_%_summary.txt : evaluation_out/Library_%_ntrecfuncs_noprops.txt evaluation_out/Library_%_tailreccalls.txt evaluation_out/Library_%_recfuncs.txt evaluation_out/Library_%_agreement.txt
	@echo "=================================================" | tee -a $@
	@echo "Algorithm stats for Rocq library $(subst _summary.txt,,$(subst evaluation_out/Library_Eval,,$@)) and its dependencies" | tee -a $@
	@echo "Recursive Calls            : " `cat $(subst _summary,_reccalls,$@)           | grep -v '^$$' | wc -l` | tee -a $@
	@echo "Tail Recursive Calls       : " `cat $(subst _summary,_tailreccalls,$@)       | grep -v '^$$' | wc -l` | tee -a $@
	@echo "Recursive Functions        : " `cat $(subst _summary,_recfuncs,$@)           | grep -v '^$$' | wc -l` | tee -a $@
	@echo "NTRecursive Functions      : " `cat $(subst _summary,_ntrecfuncs,$@)         | grep -v '^$$' | wc -l` | tee -a $@
	@echo "NTRecursive Type Functions : " `cat $(subst _summary,_ntrecfuncs_noprops,$@) | grep -v '^$$' | wc -l` | tee -a $@
	@echo "=================================================" | tee -a $@
	@echo "Comparison with ocamlopt compiled functions "      | tee -a $@
	@echo "Agreement                  : " `cat $(subst _summary,_agreement,$@)          | grep -v '^$$' | wc -l` | tee -a $@
	@echo "In Rocq only               : " `cat $(subst _summary,_removed,$@)            | grep -v '^$$' | wc -l` | tee -a $@
	@echo "In compiled only           : " `cat $(subst _summary,_added,$@)              | grep -v '^$$' | wc -l` | tee -a $@
	@echo "=================================================" | tee -a $@
	@echo ""
	@echo "This summary can be found in $@"
	@echo "For a list of functions, being only present in Rocq, see $(subst _summary,_removed,$@)"
	@echo "For a list of functions, being only present in ocamlopt compilation output, see $(subst _summary,_added,$@)"
	@echo "Generally, all output files can be found in evaluation_out."
	@echo ""
